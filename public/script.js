let cart = {};
window.onload = function() {
  const userAgent = navigator.userAgent.toLowerCase();

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ User-Agent
  console.log("User-Agent: ", userAgent);

  if (userAgent.includes('mobile')) {
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é —Å–∞–π—Ç–∞
    if (!window.location.href.includes('mobile-site.onrender.com')) {
      window.location.href = "https://mobile-site.onrender.com";
    }
  } else {
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–Ω—É—é –≤–µ—Ä—Å–∏—é —Å–∞–π—Ç–∞
    if (!window.location.href.includes('makadamia.onrender.com')) {
      window.location.href = "https://makadamia.onrender.com";
    }
  }
};

console.log("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ /refresh");
console.log("–¢–æ–∫–µ–Ω –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º:", localStorage.getItem("token"));

document.addEventListener("DOMContentLoaded", async function () {
    const token = localStorage.getItem("token");

    if (!token || isTokenExpired(token)) {
        console.log("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –ø—Ä–∏ –≤—Ö–æ–¥–µ –Ω–∞ —Å–∞–π—Ç...");
        await refreshAccessToken();
    }

    const cartButton = document.getElementById("cartButton");
    const cartDropdown = document.getElementById("cartDropdown");

    if (cartButton && cartDropdown) {
        cartButton.addEventListener("click", function (event) {
            event.stopPropagation();
            cartDropdown.style.display = cartDropdown.style.display === "block" ? "none" : "block";
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫—Ä–µ—Å—Ç–∏–∫
        const closeCartButton = document.createElement("span");
        closeCartButton.innerHTML = "‚úñ";
        closeCartButton.style.cursor = "pointer";
        closeCartButton.style.position = "absolute";
        closeCartButton.style.top = "10px";
        closeCartButton.style.right = "10px";
        closeCartButton.style.fontSize = "1.2em";
        closeCartButton.style.color = "black";
        closeCartButton.addEventListener("click", function (event) {
            event.stopPropagation();
            cartDropdown.style.display = "none";
        });

        cartDropdown.prepend(closeCartButton);
    } else {
        console.warn("‚ùå cartButton –∏–ª–∏ cartDropdown –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!");
    }
});
// –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –∫–æ—Ä–∑–∏–Ω—ã (–Ω–æ –Ω–µ –Ω–∞ —Ç–æ–≤–∞—Ä–∞—Ö)
document.addEventListener("click", function (event) {
    const cartDropdown = document.getElementById('cartDropdown');
    if (cartDropdown && !cartDropdown.contains(event.target) && !event.target.closest("#cartButton") && !event.target.closest(".cart-item")) {
        cartDropdown.style.display = 'none'; // –°–∫—Ä—ã—Ç—å –∫–æ—Ä–∑–∏–Ω—É, –µ—Å–ª–∏ –∫–ª–∏–∫ –±—ã–ª –≤–Ω–µ –∫–æ—Ä–∑–∏–Ω—ã –∏ –µ—ë —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    }
});
// –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
function addToCart(itemName, itemPrice) {
    if (cart[itemName]) {
        cart[itemName].quantity += 1;
    } else {
        cart[itemName] = { price: itemPrice, quantity: 1 };
    }
    saveCartToLocalStorage();
    updateCartDisplay();
    replaceAddButtonWithControls(itemName);
}
//–æ—á–∏—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
document.addEventListener('DOMContentLoaded', () => {
    const clearCartButton = document.getElementById('clear-cart');
    const cartTotal = document.getElementById('totalAmount'); // –≠–ª–µ–º–µ–Ω—Ç —Å –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º–æ–π
    const cartItemsContainer = document.getElementById('cartItems'); // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ

    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã
    function updateCartDisplay() {
        // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        cartItemsContainer.innerHTML = '';

        // –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏–∑ localStorage
        const cart = JSON.parse(localStorage.getItem('cart')) || {};
        let totalAmount = 0;

        // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ –∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —Å—É–º–º—É
        for (const item in cart) {
            totalAmount += cart[item].price * cart[item].quantity;

            const cartItem = document.createElement('div');
            cartItem.className = 'cart-item';
            cartItem.innerHTML = `
                <div class="item-info">${item} - ${cart[item].price * cart[item].quantity} ‚ÇΩ</div>
                <div class="cart-buttons">
                    <button onclick="decrementItem('${item}')">-</button>
                    <span class="quantity">${cart[item].quantity}</span>
                    <button onclick="incrementItem('${item}', ${cart[item].price})">+</button>
                </div>
            `;
            cartItemsContainer.appendChild(cartItem);
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É
        cartTotal.textContent = `–ò—Ç–æ–≥–æ: ${totalAmount} ‚ÇΩ`;
    }

    // –û—á–∏—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
    if (clearCartButton) {
    clearCartButton.addEventListener('click', () => {
        const username = localStorage.getItem("username");
        if (username) {
            localStorage.removeItem(`cart_${username}`); // –£–¥–∞–ª—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        }
        localStorage.removeItem('cart'); // –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ —Ç–∞–∫–∂–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è –ø–æ–¥ —ç—Ç–∏–º –∫–ª—é—á–æ–º
        updateCartDisplay(); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        cartTotal.textContent = '–ò—Ç–æ–≥–æ: 0 ‚ÇΩ';
    });
}

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    updateCartDisplay();
});

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è/—É–º–µ–Ω—å—à–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤
function decrementItem(itemName) {
    if (cart[itemName]) {
        cart[itemName].quantity -= 1;

        if (cart[itemName].quantity === 0) {
            delete cart[itemName]; // ‚ùå –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä –∏–∑ –æ–±—ä–µ–∫—Ç–∞ cart

            // –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            const cartItemElement = document.querySelector(`.cart-item[data-name="${itemName}"]`);
            if (cartItemElement) {
                cartItemElement.remove();
            }

            revertControlsToAddButton(itemName); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å"
        }

        saveCartToLocalStorage(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        updateCartDisplay(); // –û–±–Ω–æ–≤–ª—è–µ–º UI –∫–æ—Ä–∑–∏–Ω—ã

        // –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞, —Å–∫—Ä—ã–≤–∞–µ–º –µ—ë
        if (Object.keys(cart).length === 0) {
            document.getElementById("cartDropdown").style.display = "none";
        }
    }
}
function incrementItem(itemName, itemPrice) {
    addToCart(itemName, itemPrice);
}
// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å" –≤ –∫–æ–Ω—Ç—Ä–æ–ª—ã "+", "-", –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
function replaceAddButtonWithControls(itemName) {
    const addButton = document.getElementById(`addButton_${itemName}`);
    const removeButton = document.getElementById(`removeBtn_${itemName}`);
    const addButtonControl = document.getElementById(`addBtn_${itemName}`);
    const quantityDisplay = document.getElementById(`quantity_${itemName}`);

    if (!addButton || !removeButton || !addButtonControl || !quantityDisplay) {
        console.warn(`‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è ${itemName}`);
        return;
    }

    addButton.style.display = "none";
    removeButton.style.display = "inline-block";
    addButtonControl.style.display = "inline-block";
    quantityDisplay.style.display = "inline-block";
    quantityDisplay.textContent = cart[itemName].quantity;
}


// –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å" –≤–º–µ—Å—Ç–æ –∫–æ–Ω—Ç—Ä–æ–ª–æ–≤, –µ—Å–ª–∏ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω–µ
function revertControlsToAddButton(itemName) {
    const addButton = document.getElementById(`addButton_${itemName}`);
    const removeButton = document.getElementById(`removeBtn_${itemName}`);
    const addButtonControl = document.getElementById(`addBtn_${itemName}`);
    const quantityDisplay = document.getElementById(`quantity_${itemName}`);

    if (!addButton || !removeButton || !addButtonControl || !quantityDisplay) {
        console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Ç–æ–≤–∞—Ä–∞ ${itemName}`);
        return;
    }

    addButton.style.display = "inline-block";
    removeButton.style.display = "none";
    addButtonControl.style.display = "none";
    quantityDisplay.style.display = "none";
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ
function updateCartDisplay() {
    const cartItems = document.getElementById("cartItems");
    if (!cartItems) return;

    cartItems.innerHTML = ""; // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
    let totalAmount = 0;

    for (const item in cart) {
        const itemTotal = cart[item].price * cart[item].quantity;
        totalAmount += itemTotal;

        const cartItem = document.createElement("div");
        cartItem.className = "cart-item";
        cartItem.setAttribute("data-name", item); // –î–æ–±–∞–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞
        cartItem.innerHTML = `
            <div class="item-info">${item} - ${itemTotal} ‚ÇΩ</div>
            <div class="cart-buttons">
                <button onclick="decrementItem('${item}')">-</button>
                <span class="quantity">${cart[item].quantity}</span>
                <button onclick="incrementItem('${item}', ${cart[item].price})">+</button>
            </div>
        `;
        cartItems.appendChild(cartItem);
    }

    document.getElementById("totalAmount").textContent = `–ò—Ç–æ–≥–æ: ${totalAmount} ‚ÇΩ`;

    // –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞, —Å–∫—Ä—ã–≤–∞–µ–º –µ—ë
    if (Object.keys(cart).length === 0) {
        document.getElementById("cartDropdown").style.display = "none";
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –≤ localStorage
function saveCartToLocalStorage() {
    const username = localStorage.getItem("username");

    if (username) {
        localStorage.setItem(`cart_${username}`, JSON.stringify(cart)); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    } else {
        localStorage.setItem("cart_guest", JSON.stringify(cart)); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –≥–æ—Å—Ç—è
    }
}
function mergeGuestCart() {
    const username = localStorage.getItem("username");

    if (!username) return; // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–æ—à–µ–ª, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º

    const guestCart = JSON.parse(localStorage.getItem("cart_guest"));
    if (!guestCart) return; // –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω—ã –≥–æ—Å—Ç—è –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º

    const userCart = JSON.parse(localStorage.getItem(`cart_${username}`)) || {};

    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –∫–æ—Ä–∑–∏–Ω—ã (–µ—Å–ª–∏ —Ç–æ–≤–∞—Ä —É–∂–µ –µ—Å—Ç—å ‚Äî —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ)
    for (const item in guestCart) {
        if (userCart[item]) {
            userCart[item].quantity += guestCart[item].quantity;
        } else {
            userCart[item] = guestCart[item];
        }
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—É—é –∫–æ—Ä–∑–∏–Ω—É –≤ localStorage –∏ –æ—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –≥–æ—Å—Ç—è
    localStorage.setItem(`cart_${username}`, JSON.stringify(userCart));
    localStorage.removeItem("cart_guest");

    console.log("‚úÖ –ì–æ—Å—Ç–µ–≤–∞—è –∫–æ—Ä–∑–∏–Ω–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π");
}


// –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
function checkout() {
    alert("–í–∞—à –∑–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!");
    cart = {};
    updateCartDisplay();
    resetAddToCartButtons();
    saveCartToLocalStorage();
    toggleCart();
}

// –°–±—Ä–æ—Å –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –Ω–∞ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–î–æ–±–∞–≤–∏—Ç—å"
function resetAddToCartButtons() {
    for (const itemName in cart) {
        revertControlsToAddButton(itemName);
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ localStorage –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", () => {
    loadCartFromLocalStorage();
    const cartModal = document.getElementById("cartModal");
    if (cartModal) cartModal.style.display = "none";
});

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
function loadCartFromLocalStorage() {
    const username = localStorage.getItem("username");

    if (username) {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const storedCart = JSON.parse(localStorage.getItem(`cart_${username}`));
        if (storedCart) {
            cart = storedCart;
        }
    } else {
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –∑–∞–≥—Ä—É–∂–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è –≥–æ—Å—Ç—è
        const guestCart = JSON.parse(localStorage.getItem("cart_guest"));
        if (guestCart) {
            cart = guestCart;
        }
    }

    updateCartDisplay(); // –û–±–Ω–æ–≤–ª—è–µ–º UI –∫–æ—Ä–∑–∏–Ω—ã
}
async function fetchWithAuth(url, options = {}) {
    let token = localStorage.getItem("token");
    const fullUrl = window.location.origin + url; // ‚úÖ –¢–µ–ø–µ—Ä—å –∑–∞–ø—Ä–æ—Å –∏–¥—ë—Ç –Ω–∞ —Ç–µ–∫—É—â–∏–π —Å–µ—Ä–≤–µ—Ä

    if (!token) {
        console.warn("‚ùå –ù–µ—Ç accessToken, –ø—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å...");
        token = await refreshAccessToken();
        if (!token) return null;
    }

    let res = await fetch(fullUrl, {
        ...options,
        credentials: "include",
        headers: {
            ...options.headers,
            Authorization: `Bearer ${token}`
        }
    });

    if (res.status === 401) {
        console.warn("üîÑ –¢–æ–∫–µ–Ω –∏—Å—Ç—ë–∫, –ø—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å...");
        token = await refreshAccessToken();
        if (!token) return res;

        return fetch(fullUrl, {
            ...options,
            credentials: "include",
            headers: {
                ...options.headers,
                Authorization: `Bearer ${token}`
            }
        });
    }

    return res;
}


function getTokenExp(token) {
    try {
        const payload = JSON.parse(atob(token.split(".")[1]));
        return payload.exp;
    } catch (e) {
        return null;
    }
}


async function refreshAccessToken() {
    const refreshUrl = "https://mobile-site.onrender.com/refresh";  // –ú–æ–±–∏–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä

    try {
        const response = await fetch(refreshUrl, {
            method: "POST",
            credentials: "include"  // –í–∫–ª—é—á–∞–µ–º cookies
        });

        if (!response.ok) {
            console.warn(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ (${response.status})`);
            return null;
        }

        const data = await response.json();
        console.log("‚úÖ –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω:", data.accessToken);

        if (data.accessToken) {
            localStorage.setItem("token", data.accessToken); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ localStorage
        }

        return data.accessToken;
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞:", error);
        return null;
    }
}


// ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞ (–µ—Å–ª–∏ `logout()` –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω)
function handleLogout() {
    localStorage.removeItem("token");
    localStorage.removeItem("username");
    localStorage.removeItem("cart_guest"); // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –≥–æ—Å—Ç—è
    sessionStorage.clear();
    document.cookie = "refreshTokenDesktop=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC;";
    document.cookie = "refreshTokenMobile=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC;";
    window.location.href = "/";
}




function isTokenExpired(token) {
    try {
        const payload = JSON.parse(atob(token.split(".")[1])); // –î–µ–∫–æ–¥–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω
        return (Date.now() / 1000) >= payload.exp; // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è
    } catch (e) {
        return true; // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ ‚Äî —Å—á–∏—Ç–∞–µ–º —Ç–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º
    }
}


// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–æ–∫–µ–Ω–∞ —Ä–∞–∑ –≤ –º–∏–Ω—É—Ç—É
setInterval(() => {
    if (isTokenExpired()) {
      console.log("‚è≥ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞...");
        console.log("üîÑ –¢–æ–∫–µ–Ω –∏—Å—Ç—ë–∫, –æ–±–Ω–æ–≤–ª—è–µ–º...");
        refreshAccessToken().then(newToken => {
            console.log("‚úÖ –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω –ø–æ—Å–ª–µ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:", newToken);
        }).catch(err => console.error("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:", err));
    }
}, 60000); // 1 —Ä–∞–∑ –≤ –º–∏–Ω—É—Ç—É

function editField(field) {
    const input = document.getElementById(field + "Input");
    console.log("–†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø–æ–ª–µ:", field, "–ó–Ω–∞—á–µ–Ω–∏–µ:", input.value);

    if (input.disabled) {
        input.disabled = false;
        input.focus();
    } else {
        fetch("https://mobile-site.onrender.com/account", {
            method: "PUT",
            headers: {
                "Content-Type": "application/json",
                Authorization: `Bearer ${localStorage.getItem("token")}`
            },
            body: JSON.stringify({ [field]: input.value }) // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        })
        .then(response => response.json())
        .then(data => {
            console.log("–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data);
            input.disabled = true;
        })
        .catch(error => console.log("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:", error));
    }
}

document.addEventListener("DOMContentLoaded", () => {
    fetch("https://mobile-site.onrender.com/account", {
        headers: { Authorization: `Bearer ${localStorage.getItem("token")}` }
    })
    .then(res => res.json())
    .then(data => {
        if (data.name) document.getElementById("nameInput").value = data.name;
        if (data.city) document.getElementById("cityInput").value = data.city;
    })
    .catch(() => console.log("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è"));
});
document.addEventListener("DOMContentLoaded", () => {
    console.log("–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞");

    const editNameBtn = document.getElementById("editName");
    const editCityBtn = document.getElementById("editCity");

    if (editNameBtn) {
        editNameBtn.addEventListener("click", () => editField("name"));
    } else {
        console.warn("–ö–Ω–æ–ø–∫–∞ editName –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");
    }

    if (editCityBtn) {
        editCityBtn.addEventListener("click", () => editField("city"));
    } else {
        console.warn("–ö–Ω–æ–ø–∫–∞ editCity –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");
    }
});
// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
function parseJwt(token) {
    try {
        return JSON.parse(atob(token.split('.')[1]));
    } catch (e) {
        return null;
    }
}

// ‚úÖ –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è username –≤ localStorage
function saveUserInfo() {
    const token = localStorage.getItem('token');
    if (token) {
        const decoded = parseJwt(token);
        if (decoded && decoded.username) {
            localStorage.setItem('username', decoded.username);
        }
    }
}

// ‚úÖ –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
function checkAuthStatus() {
    const token = localStorage.getItem('token');
    const username = localStorage.getItem('username');
    const authButton = document.getElementById('authButton');
    const cabinetButton = document.getElementById('cabinetButton');
    const logoutButton = document.getElementById('Button');

    if (token && username && !isTokenExpired(token)) { // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å—Ç—ë–∫ –ª–∏ —Ç–æ–∫–µ–Ω
        authButton.style.display = 'none';
        cabinetButton.style.display = 'inline-block';

        if (window.location.pathname === '/account.html' && logoutButton) {
            logoutButton.style.display = 'inline-block';
        }
    } else {
        authButton.style.display = 'inline-block';
        cabinetButton.style.display = 'none';

        if (logoutButton) {
            logoutButton.style.display = 'none';
        }
    }
}

// ‚úÖ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", checkAuthStatus);

// ‚úÖ –°–ª–µ–¥–∏–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ localStorage (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–æ–≥–¥–∞ —Ç–æ–∫–µ–Ω –æ–±–Ω–æ–≤–∏—Ç—Å—è)
window.addEventListener("storage", checkAuthStatus);

// –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞
async function logout() {
    const response = await fetch("https://mobile-site.onrender.com/logout", { 
        method: "POST", 
        credentials: "include" 
    });

    if (response.ok) {
        // –£–¥–∞–ª—è–µ–º cookies –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
        document.cookie = "refreshTokenMobile=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC;";
        
        // –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
        localStorage.removeItem("token");
        localStorage.removeItem("cart");
        localStorage.removeItem("username");

        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
        window.location.href = "/index.html";
    } else {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ:", response.status);
    }
}

// –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
function openCabinet() {
    const token = localStorage.getItem('token');
    const username = localStorage.getItem('username');

    if (!token || !username) {
        // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
        window.location.href = "/login.html";
    } else {
        // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
        window.location.href = "/account.html";
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", function () {
    checkAuthStatus();

    // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ "–í—ã—Ö–æ–¥" –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ
    const logoutButton = document.getElementById('logoutButton');
    if (logoutButton && window.location.pathname !== '/account.html') {
        logoutButton.style.display = 'none';
    }
});

// –†–∞—Å—á–µ—Ç –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ—Ä–∑–∏–Ω—ã
function calculateBalance() {
    let balance = 0;
    for (const item in cart) {
        balance += cart[item].price * cart[item].quantity;
    }
    return balance;
}
// –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
function goToCheckoutPage() {
    saveCartToLocalStorage();
    window.location.href = "checkout.html";
}


document.addEventListener("DOMContentLoaded", () => {
    const token = localStorage.getItem('token'); // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ localStorage
    if (!token) {
        document.getElementById('usernameDisplay').innerText = "–ì–æ—Å—Ç—å";
        return;
    }
    fetch('/account', {
        headers: { Authorization: `Bearer ${token}` }
    })
    .then(res => res.json())
    .then(data => {
        if (data.username) {
            document.getElementById('usernameDisplay').innerText = data.username;
            document.getElementById('authButton').style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º "–í—Ö–æ–¥"
            document.getElementById('cabinetButton').style.display = 'inline-block'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"
        } else {
            document.getElementById('usernameDisplay').innerText = "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏";
        }
    })
    .catch(() => {
        document.getElementById('usernameDisplay').innerText = "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏";
    });
});
async function updateAccount(newUsername, newPassword) {
  const token = localStorage.getItem("accessToken");

  const response = await fetch("https://mobile-site.onrender.com/account", {
    method: "PUT",
    headers: {
      "Content-Type": "application/json",
      "Authorization": `Bearer ${token}` // –ë–µ–∑ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä –æ—Ç–∫–ª–æ–Ω–∏—Ç –∑–∞–ø—Ä–æ—Å
    },
    body: JSON.stringify({ username: newUsername, password: newPassword }),
  });

  const data = await response.json();
  console.log("–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data);
}
function handleAuthClick() {
    const token = localStorage.getItem('token');
    if (token) {
        window.location.href = 'account.html'; // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
    } else {
        window.location.href = 'login.html'; // –ï—Å–ª–∏ –Ω–µ—Ç, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    }
}
document.addEventListener('DOMContentLoaded', () => {
    const menuToggle = document.querySelector('.menu-toggle');
    const navbar = document.querySelector('.navbar');
    const closeMenu = document.querySelector('.close-menu');
    const menuLinks = document.querySelectorAll('.navbar a'); // –í—Å–µ —Å—Å—ã–ª–∫–∏ –≤ –º–µ–Ω—é
    const body = document.body; // –î–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏

    if (!menuToggle || !navbar || !closeMenu) {
        console.error("–ù–µ –Ω–∞–π–¥–µ–Ω –æ–¥–∏–Ω –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: menuToggle, navbar, closeMenu.");
        return;
    }

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
    menuToggle.addEventListener('click', () => {
        navbar.classList.add('active');
        body.classList.add('no-scroll'); // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
    function closeNavMenu() {
        navbar.classList.remove('active');
        body.classList.remove('no-scroll'); // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É
    }

    closeMenu.addEventListener('click', closeNavMenu);

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –ª—é–±—É—é —Å—Å—ã–ª–∫—É
    menuLinks.forEach(link => {
        link.addEventListener('click', () => {
            closeNavMenu();
        });
    });
});
document.addEventListener("DOMContentLoaded", function () {
    if (!localStorage.getItem("cookiesAccepted")) {
        showCookieBanner();
    }
});

function showCookieBanner() {
    const banner = document.createElement("div");
    banner.innerHTML = `
        <div id="cookie-banner" style="position: fixed; bottom: 0; width: 100%; background: black; color: white; padding: 10px; text-align: center; z-index: 1000;">
            <p>–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º cookies –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å–∞–π—Ç–∞, —Ç–∞–∫ –∫–∞–∫ –±–µ–∑ –Ω–∏—Ö —Å –∞–∫–∫–∞—É–Ω—Ç–∞ –≤–∞—Å –≤—ã–∫–∏–Ω–µ—Ç —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É. <button id="acceptCookies" style="margin-left: 10px;">–ü—Ä–∏–Ω—è—Ç—å</button></p>
        </div>
    `;
    document.body.appendChild(banner);

    document.getElementById("acceptCookies").addEventListener("click", function () {
        localStorage.setItem("cookiesAccepted", "true");
        banner.remove();
    });
}

document.addEventListener("DOMContentLoaded", () => {
    const toggleButtons = document.querySelectorAll(".toggle-description-btn");

    toggleButtons.forEach((button) => {
        button.addEventListener("click", () => {
            // –ò—â–µ–º —Ç–µ–∫—Å—Ç –≤–Ω—É—Ç—Ä–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
            const parent = button.closest(".menu-item"); // –ù–∞—Ö–æ–¥–∏–º –æ–±—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            const description = parent.querySelector(".description-collapsible"); // –ù–∞—Ö–æ–¥–∏–º —Ç–µ–∫—Å—Ç

            if (description) {
                description.classList.toggle("expanded"); // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∫–ª–∞—Å—Å "expanded"

                // –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
                button.textContent = description.classList.contains("expanded")
                    ? "–°–≤–µ—Ä–Ω—É—Ç—å"
                    : "–ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ";
            } else {
                console.error("–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!");
            }
        });
    });
});
async function updateAccount(newUsername, newPassword) {
  const token = localStorage.getItem("accessToken");

  const response = await fetch("https://mobile-site.onrender.com/account", {
    method: "PUT",
    headers: {
      "Content-Type": "application/json",
      "Authorization": `Bearer ${token}` // –ë–µ–∑ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä –æ—Ç–∫–ª–æ–Ω–∏—Ç –∑–∞–ø—Ä–æ—Å
    },
    body: JSON.stringify({ username: newUsername, password: newPassword }),
  });

  const data = await response.json();
  console.log("–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data);
}

// –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
function goToCheckoutPage() {
    saveCartToLocalStorage();
    window.location.href = "checkout.html";
}
